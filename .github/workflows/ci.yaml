name: CI

concurrency:
  group: ci-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

on:
  push:
    branches:
      - master
      - release/*
    tags:
      - "*"
  pull_request:
  schedule:
    - cron: "0 10 * * *" # ~2am PST
  workflow_dispatch:
    inputs:
      debug_enabled:
        type: boolean
        description: "Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)"
        required: false
        default: false

jobs:
  test:
    runs-on: lab

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: stable
          cache: true

      # Don't remove it! We shouldn't allow CI to pass if there are any changes not committed after running make
      - name: Run all generators, lint and fail on dirty
        run: |
          just --timestamp gen _lint
          git status --short
          git diff --quiet

      - name: Go Lint
        uses: golangci/golangci-lint-action@v6
        with:
          # keep in sync with hack/tools.just
          version: v1.61.0

      # TODO run tests again
      # - name: Run tests
      #   run: |
      #     just --timestamp test

      - name: GHA Lint
        run: |
          just lint-gha

      - name: Setup tmate session for debug
        if: ${{ failure() && github.event_name == 'workflow_dispatch' && inputs.debug_enabled }}
        uses: mxschmitt/action-tmate@v3
        timeout-minutes: 30
        with:
          limit-access-to-actor: true

  build:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15

    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
        buildmode:
          - "--usb=false"
          - "--usb=true"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: stable
          cache: true

      - name: Setup Just
        uses: extractions/setup-just@v2

      - name: Setup docker on MacOS
        if: matrix.os == 'macos-latest'
        run: |
          brew install docker

      - name: Build hhfab for local OS/ARCH
        run: |
          just --timestamp hhfab-build-local

      - name: Login to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: hhfab init and build
        run: |
          bin/hhfab init -v --dev
          bin/hhfab build -v ${{ matrix.buildmode }}
          ls -lah result

      - name: Setup tmate session for debug
        if: ${{ failure() && github.event_name == 'workflow_dispatch' && inputs.debug_enabled }}
        uses: mxschmitt/action-tmate@v3
        timeout-minutes: 30
        with:
          limit-access-to-actor: true

  builds:
    runs-on: ubuntu-latest
    needs:
      - build
    if: ${{ always() }}

    steps:
      - run: |
          result="${{ needs.build.result }}"
          if [[ $result == "success" || $result == "skipped" ]]; then
            exit 0
          else
            exit 1
          fi

  vlab:
    runs-on: vlab
    needs:
      - test
      - build
    timeout-minutes: 30

    strategy:
      fail-fast: false
      matrix:
        buildmode:
          - "--usb=false"
          - "--usb=true"
        fabricmode:
          - collapsed-core
          - spine-leaf

    steps:
      - name: Runner host
        run: |
          echo "$KUBE_NODE"

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: stable
          cache: true

      - name: Build hhfab
        run: |
          just --timestamp hhfab-build-local

      - name: Login to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to lab registry
        uses: docker/login-action@v3
        with:
          registry: m-pub.l.hhdev.io:31000
          username: lab
          password: ${{ secrets.LAB_REGISTRY_TOKEN }}

      - name: hhfab init and vlab up
        run: |
          export HHFAB_REG_REPO=m-pub.l.hhdev.io:31000

          bin/hhfab init -v --dev -m ${{ matrix.fabricmode }}
          bin/hhfab vlab gen -v
          bin/hhfab vlab up -v --fail-fast --exit-on-ready ${{ matrix.buildmode }}

      - name: Setup tmate session for debug
        if: ${{ failure() && github.event_name == 'workflow_dispatch' && inputs.debug_enabled }}
        uses: mxschmitt/action-tmate@v3
        timeout-minutes: 120
        with:
          limit-access-to-actor: true

  vlabs:
    runs-on: ubuntu-latest
    needs:
      - vlab
    if: ${{ always() }}

    steps:
      - run: |
          result="${{ needs.vlab.result }}"
          if [[ $result == "success" || $result == "skipped" ]]; then
            exit 0
          else
            exit 1
          fi

  publish:
    runs-on: lab
    if: startsWith(github.event.ref, 'refs/tags/') && github.event_name == 'push'
    needs:
      - build
      - vlab

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: stable
          cache: true

      # - name: Cache dev tools
      #   uses: actions/cache@v3
      #   with:
      #     path: bin
      #     key: bin-${{ hashFiles('hack/tools.mk') }}

      - name: Login to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish Images, Helm charts and Bins on release
        run: |
          OCI_REPO=ghcr.io/githedgehog/fabricator make push

      - name: Setup tmate session for debug
        if: ${{ failure() && github.event_name == 'workflow_dispatch' && inputs.debug_enabled }}
        uses: mxschmitt/action-tmate@v3
        timeout-minutes: 30
        with:
          limit-access-to-actor: true

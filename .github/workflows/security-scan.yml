name: Security Scan

permissions:
  contents: read
  security-events: write
  actions: read

on:
  # Runs nightly at 2 AM UTC
  schedule:
    - cron: '0 2 * * *'

  # FIXME: TEMPORARY: For testing workflow changes
  push:
    branches:
      - pau/fabricator_sec_scan
    paths:
      - '.github/workflows/security-scan.yml'
      - 'hack/vlab-trivy-runner.sh'
      - 'hack/trivy-setup-airgapped.sh'
      - 'hack/trivy-setup.sh'

  workflow_dispatch:
    inputs:
      debug_enabled:
        type: boolean
        description: "Enable debug output"
        required: false
        default: false

# Only run one security scan at a time
concurrency:
  group: security-scan
  cancel-in-progress: false

jobs:
  trivy-security-scan:
    runs-on: vlab
    timeout-minutes: 60

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: stable
          cache: true

      - name: Setup local registry
        run: |
          just --timestamp _localreg &

      - name: Build and push hhfab artifacts
        run: |
          just --timestamp oci_repo=127.0.0.1:30000 oci=http push

      - name: Run VLAB Trivy Security Scan
        env:
          HHFAB_REG_REPO: 127.0.0.1:30000
        run: |
          echo "Starting security scan..."
          just security-scan

      - name: Consolidate SARIF files for GitHub Security
        if: always()
        run: |
          sarif_count=$(find sarif-reports -name "*.sarif" -type f 2>/dev/null | wc -l)

          if [ "$sarif_count" -gt 0 ]; then
            echo "Found $sarif_count SARIF files, consolidating..."

            consolidated_file="sarif-reports/trivy-security-scan.sarif"
            sarif_files=($(find sarif-reports -name "*.sarif" -type f))

            if [ ${#sarif_files[@]} -eq 1 ]; then
              mv "${sarif_files[0]}" "$consolidated_file"
              echo "Single SARIF file renamed to trivy-security-scan.sarif"
            elif [ ${#sarif_files[@]} -gt 1 ]; then
              echo "Merging ${#sarif_files[@]} SARIF files into single consolidated file..."
              cp "${sarif_files[0]}" "$consolidated_file"

              for ((i=1; i<${#sarif_files[@]}; i++)); do
                merge_file="${sarif_files[$i]}"
                echo "Merging: $(basename "$merge_file")"
                jq -s '
                  .[0].runs[0].results += .[1].runs[0].results |
                  .[0].runs[0].tool.driver.rules += (.[1].runs[0].tool.driver.rules // []) |
                  .[0].runs[0].tool.driver.rules |= unique_by(.id) |
                  .[0]
                ' "$consolidated_file" "$merge_file" > "${consolidated_file}.tmp" && \
                mv "${consolidated_file}.tmp" "$consolidated_file"
              done

              for file in "${sarif_files[@]}"; do
                rm -f "$file"
              done
              echo "âœ“ All SARIF files merged into single consolidated report"
            fi

            echo "UPLOAD_SARIF=true" >> $GITHUB_ENV
            echo "SARIF_FILE=$consolidated_file" >> $GITHUB_ENV
          else
            echo "No SARIF files found - skipping upload (GitHub will preserve previous state)"
            echo "UPLOAD_SARIF=false" >> $GITHUB_ENV
          fi

      - name: Upload SARIF file
        if: always() && env.UPLOAD_SARIF == 'true'
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ${{ env.SARIF_FILE }}
          category: trivy-container-scan
        continue-on-error: true

      - name: Upload scan artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: security-scan-${{ github.run_number }}
          path: |
            trivy-reports/
            sarif-reports/
            vlab.log
          retention-days: 30

      - name: Setup tmate session for debug
        if: ${{ failure() && github.event_name == 'workflow_dispatch' && inputs.debug_enabled }}
        uses: mxschmitt/action-tmate@v3
        timeout-minutes: 30
        with:
          limit-access-to-actor: true

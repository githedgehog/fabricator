variant: flatcar
version: 1.0.0

passwd:
  users:
    - name: core
      password_hash: "{{ .PasswordHash }}"
      {{ if .AuthorizedKeys }}
      ssh_authorized_keys:
        {{ range .AuthorizedKeys}}
        - "{{ . }}"
        {{ end }}
      {{ end }}
      groups:
        - wheel
      shell: /bin/bash

systemd:
  units:
    - name: locksmithd.service
      mask: true
{{ if .AutoInstall }}
    - name: fabric-install.service
      enabled: true
      contents: |
        [Unit]
        Description="Firstboot installation program for Hedgehog Fabricator"
        ConditionFirstBoot=yes

        [Service]
        Type=simple
        ExecStart={{ .AutoInstall }}/hhfab-recipe control install -v
        WorkingDirectory={{ .AutoInstall }}
        Environment="PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/bin" "HOME=/home/core"

        [Install]
        WantedBy=first-boot-complete.target
{{ end }}

storage:
  files:
    - path: /etc/flatcar/update.conf
      mode: 0644
      overwrite: true
      contents:
        inline: |
          SERVER=disabled
          REBOOT_STRATEGY=off
      # https://www.flatcar.org/docs/latest/setup/releases/update-strategies/#disable-automatic-updates

    - path: /etc/hostname
      mode: 0644
      overwrite: true
      contents:
        inline: "{{ .Hostname }}"

    - path: /etc/hosts
      append:
        - inline: |
            127.0.0.1 {{ .Hostname }}

    - path: /etc/motd.d/hedgehog.conf
      mode: 0644
      contents:
        inline: |
          Hedgehog Control Node

    - path: /etc/systemd/network/10-dummy.netdev
      mode: 0644
      contents:
        inline: |
          [NetDev]
          Name=dummy0
          Kind=dummy

    - path: /etc/systemd/network/11-dummy.network
      mode: 0644
      contents:
        inline: |
          [Match]
          Name=dummy0

          [Network]
          Address={{ .DummyAddress }}

          [Route]
          Gateway={{ .DummyGateway }}
          Destination=0.0.0.0/0
          Metric=42000

    - path: /etc/systemd/network/20-mgmt.network
      mode: 0644
      contents:
        inline: |
          [Match]
          Name={{ .MgmtInterface }}
          Type=ether

          [Network]
          Address={{ .MgmtAddress }}
          Address={{ .ControlVIP }}
          DHCP=no
          IPv6AcceptRA=no
          IPv6SendRA=no
          LLDP=yes
          EmitLLDP=yes
          ConfigureWithoutCarrier=yes

    - path: /etc/systemd/network/30-ext.network
      mode: 0644
      contents:
        inline: |
          [Match]
          Name={{ .ExtInterface }}
          Type=ether
{{ if eq .ExtAddress "dhcp" }}
          [Network]
          DHCP=ipv4
          KeepConfiguration=dhcp-on-stop
          IPv6AcceptRA=no
          IPv6SendRA=no
          LLDP=no
          EmitLLDP=no

          [DHCP]
          UseMTU=true
          UseDomains=true

          [DHCPv4]
          RoutesToDNS=false
          UseHostname=false
{{ else }}
          [Network]
          Address={{ .ExtAddress }}
          {{ if .ExtGateway }}Gateway={{ .ExtGateway }}{{ end }}
          {{ range .ExtDNS }}
          DNS={{ . }}
          {{ end }}
          DHCP=no
          IPv6AcceptRA=no
          IPv6SendRA=no
          LLDP=no
          EmitLLDP=no
{{ end }}

    - path: /etc/systemd/network/99-default.network
      mode: 0644
      contents:
        inline: |
          [Network]
          DHCP=no

          [Match]
          Name=*
          Type=!loopback bridge tunnel vxlan wireguard
          Driver=!veth dummy

          [Link]
          Unmanaged=true

    - path: /etc/default/toolbox
      mode: 0644
      contents:
        inline: |
          TOOLBOX_DOCKER_IMAGE=ghcr.io/githedgehog/toolbox
          TOOLBOX_DOCKER_TAG=latest
          TOOLBOX_USER=root

    # K9s plugin to reboot and reinstall switches
    - path: /home/core/.config/k9s/plugins.yaml
      user:
        name: core
      mode: 0644
      contents:
        inline: |
          plugins:
            fabricswitchssh:
              shortCut: s
              description: SSH
              scopes:
              - switch
              - agent
              background: false
              command: kubectl
              args:
              - fabric
              - switch
              - ssh
              - --name
              - $NAME
            fabricswitchserial:
              shortCut: Shift-S
              description: Serial
              scopes:
              - switch
              - agent
              background: false
              command: kubectl
              args:
              - fabric
              - switch
              - serial
              - --name
              - $NAME
            fabricswitchreboot:
              shortCut: r
              description: Reboot
              scopes:
              - switch
              - agent
              confirm: true
              background: false
              command: kubectl
              args:
              - fabric
              - switch
              - reboot
              - --name
              - $NAME
              - --yes
            fabricswitchpowerreset:
              shortCut: Shift-K
              description: Power Reset
              scopes:
              - switch
              - agent
              confirm: true
              background: false
              command: kubectl
              args:
              - fabric
              - switch
              - power-reset
              - --name
              - $NAME
              - --yes
            fabricswitchreinstall:
              shortCut: Shift-R
              description: Reinstall
              scopes:
              - switch
              - agent
              confirm: true
              background: false
              command: kubectl
              args:
              - fabric
              - switch
              - reinstall
              - --name
              - $NAME
              - --yes

  directories:
    - path: /home/core/.config
      user:
        name: core

    - path: /home/core/.config/k9s
      user:
        name: core

    - path: /home/core/.kube
      user:
        name: core

  links:
    - path: /home/core/.kube/config
      target: /etc/rancher/k3s/k3s.yaml
      user:
        name: core
      group:
        name: core
